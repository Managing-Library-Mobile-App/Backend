version: '3.8'

services:
  prometheus:
    image: prom/prometheus:v2.14.0
    restart: 'no'
    volumes:
      - prometheus_data:/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
     - flask

  grafana:
    image: grafana/grafana
    environment:
      GF_INSTALL_PLUGINS: "grafana-clock-panel,grafana-simple-json-datasource"
    restart: 'no'
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

  flask:
    build: .
    ports:
      - "5000:5000"
    depends_on:
      db:
        condition: service_healthy


  db:
    image: postgres:latest
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 3
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${user_prod}
      POSTGRES_PASSWORD: ${password_prod}
    expose:
      - "5432"
    ports:
      - "5432:5432"
    volumes:
      - ./data/postgres-data:/var/lib/postgresql/data
      #- ./data/database/create_default_database_structure.sql:/docker-entrypoint-initdb.d/create_fixtures.sql

  pgadmin:
    container_name: pgadmin4
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: root@root.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"
    volumes:
      - ./data/pgadmin-data:/var/lib/pgadmin


volumes:
  prometheus_data: { }
  grafana_data: { }
  db:
    driver:
      local