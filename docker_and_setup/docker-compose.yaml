version: '3.8'

services:
  prometheus:
    image: prom/prometheus:v2.14.0
    restart: 'no'
    volumes:
      - prometheus_data:/docker_and_setup/prometheus
      - ./docker_and_setup/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
     - flask

  grafana:
    image: grafana/grafana
    environment:
      GF_INSTALL_PLUGINS: "grafana-clock-panel,grafana-simple-json-datasource"
    restart: 'no'
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

  flask:
    build: ./docker_and_setup/
    ports:
      - "5000:5000"
    depends_on:
      db:
        condition: service_healthy


  db:
    container_name: db
    expose:
      - "5433" # Publishes 5433 to other containers but NOT to host machine
    ports:
      - "5433:5432"
    image: postgres:latest
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
        POSTGRES_USER: username
        POSTGRES_PASSWORD: secret
        POSTGRES_DB: database
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      # copy the sql script to create tables
      - ./docker_and_setup/database/create_default_database_structure.sql:/docker-entrypoint-initdb.d/create_fixtures.sql


  pgadmin:
    container_name: pgadmin4
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: root@root.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"
    volumes:
      - ./pgadmin-data:/var/lib/pgadmin


volumes:
  prometheus_data: { }
  grafana_data: { }
